{"version":3,"sources":["webpack://unnamed/./node_modules/micromodal/dist/micromodal.es.js","webpack://unnamed/./_build/js/site/webinar-modal.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","FOCUSABLE_ELEMENTS","Modal","activeModal","validateModalPresence","validateArgs","MicroModal","_ref","targetModal","_ref$triggers","triggers","_ref$onShow","onShow","_ref$onClose","onClose","_ref$openTrigger","openTrigger","_ref$closeTrigger","closeTrigger","_ref$openClass","openClass","_ref$disableScroll","disableScroll","_ref$disableFocus","disableFocus","_ref$awaitCloseAnimat","awaitCloseAnimation","_ref$awaitOpenAnimati","awaitOpenAnimation","_ref$debugMode","debugMode","instance","Constructor","_classCallCheck","this","modal","document","getElementById","config","registerTriggers","apply","onClick","bind","onKeydown","protoProps","value","_this","_len","arguments","_key","filter","Boolean","forEach","trigger","addEventListener","event","showModal","_this2","undefined","activeElement","setAttribute","classList","add","scrollBehaviour","addEventListeners","handler","removeEventListener","setFocusToFirstNode","removeEventListeners","focus","remove","closeModal","toggle","body","querySelector","assign","style","overflow","hasAttribute","keyCode","retainFocus","nodes","querySelectorAll","_this3","focusableNodes","getFocusableNodes","nodesWhichAreNotCloseTargets","node","offsetParent","contains","focusedItemIndex","indexOf","shiftKey","preventDefault","id","console","warn","concat","triggerMap","validateTriggerPresence","init","options","triggerAttr","attributes","push","generateTriggerMap","show","close","closeModalById","window","log"],"mappings":"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","file":"scripts.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MicroModal = function () {\n\n  var FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  var Modal = /*#__PURE__*/function () {\n    function Modal(_ref) {\n      var targetModal = _ref.targetModal,\n          _ref$triggers = _ref.triggers,\n          triggers = _ref$triggers === void 0 ? [] : _ref$triggers,\n          _ref$onShow = _ref.onShow,\n          onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n          _ref$onClose = _ref.onClose,\n          onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n          _ref$openTrigger = _ref.openTrigger,\n          openTrigger = _ref$openTrigger === void 0 ? 'data-micromodal-trigger' : _ref$openTrigger,\n          _ref$closeTrigger = _ref.closeTrigger,\n          closeTrigger = _ref$closeTrigger === void 0 ? 'data-micromodal-close' : _ref$closeTrigger,\n          _ref$openClass = _ref.openClass,\n          openClass = _ref$openClass === void 0 ? 'is-open' : _ref$openClass,\n          _ref$disableScroll = _ref.disableScroll,\n          disableScroll = _ref$disableScroll === void 0 ? false : _ref$disableScroll,\n          _ref$disableFocus = _ref.disableFocus,\n          disableFocus = _ref$disableFocus === void 0 ? false : _ref$disableFocus,\n          _ref$awaitCloseAnimat = _ref.awaitCloseAnimation,\n          awaitCloseAnimation = _ref$awaitCloseAnimat === void 0 ? false : _ref$awaitCloseAnimat,\n          _ref$awaitOpenAnimati = _ref.awaitOpenAnimation,\n          awaitOpenAnimation = _ref$awaitOpenAnimati === void 0 ? false : _ref$awaitOpenAnimati,\n          _ref$debugMode = _ref.debugMode,\n          debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode;\n\n      _classCallCheck(this, Modal);\n\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode: debugMode,\n        disableScroll: disableScroll,\n        openTrigger: openTrigger,\n        closeTrigger: closeTrigger,\n        openClass: openClass,\n        onShow: onShow,\n        onClose: onClose,\n        awaitCloseAnimation: awaitCloseAnimation,\n        awaitOpenAnimation: awaitOpenAnimation,\n        disableFocus: disableFocus\n      }; // Register click events only if pre binding eventListeners\n\n      if (triggers.length > 0) this.registerTriggers.apply(this, _toConsumableArray(triggers)); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    _createClass(Modal, [{\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this = this;\n\n        for (var _len = arguments.length, triggers = new Array(_len), _key = 0; _key < _len; _key++) {\n          triggers[_key] = arguments[_key];\n        }\n\n        triggers.filter(Boolean).forEach(function (trigger) {\n          trigger.addEventListener('click', function (event) {\n            return _this.showModal(event);\n          });\n        });\n      }\n    }, {\n      key: \"showModal\",\n      value: function showModal() {\n        var _this2 = this;\n\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.activeElement = document.activeElement;\n        this.modal.setAttribute('aria-hidden', 'false');\n        this.modal.classList.add(this.config.openClass);\n        this.scrollBehaviour('disable');\n        this.addEventListeners();\n\n        if (this.config.awaitOpenAnimation) {\n          var handler = function handler() {\n            _this2.modal.removeEventListener('animationend', handler, false);\n\n            _this2.setFocusToFirstNode();\n          };\n\n          this.modal.addEventListener('animationend', handler, false);\n        } else {\n          this.setFocusToFirstNode();\n        }\n\n        this.config.onShow(this.modal, this.activeElement, event);\n      }\n    }, {\n      key: \"closeModal\",\n      value: function closeModal() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var modal = this.modal;\n        this.modal.setAttribute('aria-hidden', 'true');\n        this.removeEventListeners();\n        this.scrollBehaviour('enable');\n\n        if (this.activeElement && this.activeElement.focus) {\n          this.activeElement.focus();\n        }\n\n        this.config.onClose(this.modal, this.activeElement, event);\n\n        if (this.config.awaitCloseAnimation) {\n          var openClass = this.config.openClass; // <- old school ftw\n\n          this.modal.addEventListener('animationend', function handler() {\n            modal.classList.remove(openClass);\n            modal.removeEventListener('animationend', handler, false);\n          }, false);\n        } else {\n          modal.classList.remove(this.config.openClass);\n        }\n      }\n    }, {\n      key: \"closeModalById\",\n      value: function closeModalById(targetModal) {\n        this.modal = document.getElementById(targetModal);\n        if (this.modal) this.closeModal();\n      }\n    }, {\n      key: \"scrollBehaviour\",\n      value: function scrollBehaviour(toggle) {\n        if (!this.config.disableScroll) return;\n        var body = document.querySelector('body');\n\n        switch (toggle) {\n          case 'enable':\n            Object.assign(body.style, {\n              overflow: ''\n            });\n            break;\n\n          case 'disable':\n            Object.assign(body.style, {\n              overflow: 'hidden'\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        this.modal.addEventListener('touchstart', this.onClick);\n        this.modal.addEventListener('click', this.onClick);\n        document.addEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"removeEventListeners\",\n      value: function removeEventListeners() {\n        this.modal.removeEventListener('touchstart', this.onClick);\n        this.modal.removeEventListener('click', this.onClick);\n        document.removeEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (event.target.hasAttribute(this.config.closeTrigger)) {\n          this.closeModal(event);\n        }\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (event.keyCode === 27) this.closeModal(event); // esc\n\n        if (event.keyCode === 9) this.retainFocus(event); // tab\n      }\n    }, {\n      key: \"getFocusableNodes\",\n      value: function getFocusableNodes() {\n        var nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n        return Array.apply(void 0, _toConsumableArray(nodes));\n      }\n      /**\n       * Tries to set focus on a node which is not a close trigger\n       * if no other nodes exist then focuses on first close trigger\n       */\n\n    }, {\n      key: \"setFocusToFirstNode\",\n      value: function setFocusToFirstNode() {\n        var _this3 = this;\n\n        if (this.config.disableFocus) return;\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return; // remove nodes on whose click, the modal closes\n        // could not think of a better name :(\n\n        var nodesWhichAreNotCloseTargets = focusableNodes.filter(function (node) {\n          return !node.hasAttribute(_this3.config.closeTrigger);\n        });\n        if (nodesWhichAreNotCloseTargets.length > 0) nodesWhichAreNotCloseTargets[0].focus();\n        if (nodesWhichAreNotCloseTargets.length === 0) focusableNodes[0].focus();\n      }\n    }, {\n      key: \"retainFocus\",\n      value: function retainFocus(event) {\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return;\n        /**\n         * Filters nodes which are hidden to prevent\n         * focus leak outside modal\n         */\n\n        focusableNodes = focusableNodes.filter(function (node) {\n          return node.offsetParent !== null;\n        }); // if disableFocus is true\n\n        if (!this.modal.contains(document.activeElement)) {\n          focusableNodes[0].focus();\n        } else {\n          var focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n          if (event.shiftKey && focusedItemIndex === 0) {\n            focusableNodes[focusableNodes.length - 1].focus();\n            event.preventDefault();\n          }\n\n          if (!event.shiftKey && focusableNodes.length > 0 && focusedItemIndex === focusableNodes.length - 1) {\n            focusableNodes[0].focus();\n            event.preventDefault();\n          }\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  var activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  var generateTriggerMap = function generateTriggerMap(triggers, triggerAttr) {\n    var triggerMap = [];\n    triggers.forEach(function (trigger) {\n      var targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  var validateModalPresence = function validateModalPresence(id) {\n    if (!document.getElementById(id)) {\n      console.warn(\"MicroModal: \\u2757Seems like you have missed %c'\".concat(id, \"'\"), 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<div class=\\\"modal\\\" id=\\\"\".concat(id, \"\\\"></div>\"));\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  var validateTriggerPresence = function validateTriggerPresence(triggers) {\n    if (triggers.length <= 0) {\n      console.warn(\"MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<a href=\\\"#\\\" data-micromodal-trigger=\\\"my-modal\\\"></a>\");\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  var validateArgs = function validateArgs(triggers, triggerMap) {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) {\n      validateModalPresence(id);\n    }\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  var init = function init(config) {\n    // Create an config object with default openTrigger\n    var options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    var triggers = _toConsumableArray(document.querySelectorAll(\"[\".concat(options.openTrigger, \"]\"))); // Makes a mappings of modals with their trigger nodes\n\n\n    var triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      var value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = _toConsumableArray(value);\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  var show = function show(targetModal, config) {\n    var options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // clear events in case previous modal wasn't close\n\n    if (activeModal) activeModal.removeEventListeners(); // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  var close = function close(targetModal) {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init: init,\n    show: show,\n    close: close\n  };\n}();\nwindow.MicroModal = MicroModal;\n\nexport default MicroModal;\n","import MicroModal from 'micromodal';\n\nconsole.log(MicroModal);\nMicroModal.init();\n\n// const tabs = document.querySelectorAll('[role=\"tablist\"]');\n// tabs.forEach(t => {\n//   AriaTablist(t);\n// });"],"sourceRoot":""}