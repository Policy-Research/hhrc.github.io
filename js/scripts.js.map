{"version":3,"sources":["webpack://unnamed/./_build/js/lib/polyfills/dom-parser-extension.js","webpack://unnamed/webpack/bootstrap","webpack://unnamed/./node_modules/micromodal/dist/micromodal.es.js","webpack://unnamed/./_build/js/site/webinar-modal.js","webpack://unnamed/./_build/js/lib/utils.js"],"names":["DOMParser","proto","prototype","nativeParse","parseFromString","ex","markup","type","test","doc","document","implementation","createHTMLDocument","toLowerCase","indexOf","documentElement","innerHTML","body","apply","this","arguments","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","toString","call","slice","constructor","name","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","FOCUSABLE_ELEMENTS","Modal","activeModal","validateModalPresence","validateArgs","MicroModal","_ref","targetModal","_ref$triggers","triggers","_ref$onShow","onShow","_ref$onClose","onClose","_ref$openTrigger","openTrigger","_ref$closeTrigger","closeTrigger","_ref$openClass","openClass","_ref$disableScroll","disableScroll","_ref$disableFocus","disableFocus","_ref$awaitCloseAnimat","awaitCloseAnimation","_ref$awaitOpenAnimati","awaitOpenAnimation","_ref$debugMode","debugMode","instance","Constructor","_classCallCheck","modal","getElementById","config","registerTriggers","onClick","bind","onKeydown","protoProps","value","_this","_len","_key","filter","Boolean","forEach","trigger","addEventListener","event","showModal","_this2","undefined","activeElement","setAttribute","classList","add","scrollBehaviour","addEventListeners","handler","removeEventListener","setFocusToFirstNode","removeEventListeners","focus","remove","closeModal","toggle","querySelector","assign","style","overflow","hasAttribute","keyCode","retainFocus","nodes","querySelectorAll","_this3","focusableNodes","getFocusableNodes","nodesWhichAreNotCloseTargets","node","offsetParent","contains","focusedItemIndex","shiftKey","preventDefault","id","console","warn","concat","triggerMap","validateTriggerPresence","init","options","triggerAttr","attributes","push","generateTriggerMap","show","close","closeModalById","window","modals","wrappers","index","data","JSON","parse","dataset","siteModal","classes","getAttribute","removeAttribute","wrapper","label","title","template","trim","firstChild","appendChild","container","createElement","m"],"mappings":"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","file":"scripts.js","sourcesContent":["/*\n * DOMParser HTML extension\n * 2012-09-04\n *\n * By Eli Grey, http://eligrey.com\n * Public domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*! @source https://gist.github.com/1129031 */\n/*global document, DOMParser*/\n\n(function(DOMParser) {\n\t\"use strict\";\n\n\tvar proto = DOMParser.prototype,\n\tnativeParse = proto.parseFromString;\n\n\t// Firefox/Opera/IE throw errors on unsupported types\n\ttry {\n\t\t// WebKit returns null on unsupported types\n\t\tif ((new DOMParser()).parseFromString(\"\", \"text/html\")) {\n\t\t\t// text/html parsing is natively supported\n\t\t\treturn;\n\t\t}\n\t} catch (ex) {}\n\n\tproto.parseFromString = function(markup, type) {\n\t\tif (/^\\s*text\\/html\\s*(?:;|$)/i.test(type)) {\n\t\t\tvar doc = document.implementation.createHTMLDocument(\"\");\n\t\t\t\tif (markup.toLowerCase().indexOf('<!doctype') > -1) {\n\t\t\t\t\tdoc.documentElement.innerHTML = markup;\n\t\t\t\t} else {\n\t\t\t\t\tdoc.body.innerHTML = markup;\n\t\t\t\t}\n\t\t\treturn doc;\n\t\t} else {\n\t\t\treturn nativeParse.apply(this, arguments);\n\t\t}\n\t};\n}(DOMParser));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MicroModal = function () {\n\n  var FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  var Modal = /*#__PURE__*/function () {\n    function Modal(_ref) {\n      var targetModal = _ref.targetModal,\n          _ref$triggers = _ref.triggers,\n          triggers = _ref$triggers === void 0 ? [] : _ref$triggers,\n          _ref$onShow = _ref.onShow,\n          onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n          _ref$onClose = _ref.onClose,\n          onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n          _ref$openTrigger = _ref.openTrigger,\n          openTrigger = _ref$openTrigger === void 0 ? 'data-micromodal-trigger' : _ref$openTrigger,\n          _ref$closeTrigger = _ref.closeTrigger,\n          closeTrigger = _ref$closeTrigger === void 0 ? 'data-micromodal-close' : _ref$closeTrigger,\n          _ref$openClass = _ref.openClass,\n          openClass = _ref$openClass === void 0 ? 'is-open' : _ref$openClass,\n          _ref$disableScroll = _ref.disableScroll,\n          disableScroll = _ref$disableScroll === void 0 ? false : _ref$disableScroll,\n          _ref$disableFocus = _ref.disableFocus,\n          disableFocus = _ref$disableFocus === void 0 ? false : _ref$disableFocus,\n          _ref$awaitCloseAnimat = _ref.awaitCloseAnimation,\n          awaitCloseAnimation = _ref$awaitCloseAnimat === void 0 ? false : _ref$awaitCloseAnimat,\n          _ref$awaitOpenAnimati = _ref.awaitOpenAnimation,\n          awaitOpenAnimation = _ref$awaitOpenAnimati === void 0 ? false : _ref$awaitOpenAnimati,\n          _ref$debugMode = _ref.debugMode,\n          debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode;\n\n      _classCallCheck(this, Modal);\n\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode: debugMode,\n        disableScroll: disableScroll,\n        openTrigger: openTrigger,\n        closeTrigger: closeTrigger,\n        openClass: openClass,\n        onShow: onShow,\n        onClose: onClose,\n        awaitCloseAnimation: awaitCloseAnimation,\n        awaitOpenAnimation: awaitOpenAnimation,\n        disableFocus: disableFocus\n      }; // Register click events only if pre binding eventListeners\n\n      if (triggers.length > 0) this.registerTriggers.apply(this, _toConsumableArray(triggers)); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    _createClass(Modal, [{\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this = this;\n\n        for (var _len = arguments.length, triggers = new Array(_len), _key = 0; _key < _len; _key++) {\n          triggers[_key] = arguments[_key];\n        }\n\n        triggers.filter(Boolean).forEach(function (trigger) {\n          trigger.addEventListener('click', function (event) {\n            return _this.showModal(event);\n          });\n        });\n      }\n    }, {\n      key: \"showModal\",\n      value: function showModal() {\n        var _this2 = this;\n\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.activeElement = document.activeElement;\n        this.modal.setAttribute('aria-hidden', 'false');\n        this.modal.classList.add(this.config.openClass);\n        this.scrollBehaviour('disable');\n        this.addEventListeners();\n\n        if (this.config.awaitOpenAnimation) {\n          var handler = function handler() {\n            _this2.modal.removeEventListener('animationend', handler, false);\n\n            _this2.setFocusToFirstNode();\n          };\n\n          this.modal.addEventListener('animationend', handler, false);\n        } else {\n          this.setFocusToFirstNode();\n        }\n\n        this.config.onShow(this.modal, this.activeElement, event);\n      }\n    }, {\n      key: \"closeModal\",\n      value: function closeModal() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var modal = this.modal;\n        this.modal.setAttribute('aria-hidden', 'true');\n        this.removeEventListeners();\n        this.scrollBehaviour('enable');\n\n        if (this.activeElement && this.activeElement.focus) {\n          this.activeElement.focus();\n        }\n\n        this.config.onClose(this.modal, this.activeElement, event);\n\n        if (this.config.awaitCloseAnimation) {\n          var openClass = this.config.openClass; // <- old school ftw\n\n          this.modal.addEventListener('animationend', function handler() {\n            modal.classList.remove(openClass);\n            modal.removeEventListener('animationend', handler, false);\n          }, false);\n        } else {\n          modal.classList.remove(this.config.openClass);\n        }\n      }\n    }, {\n      key: \"closeModalById\",\n      value: function closeModalById(targetModal) {\n        this.modal = document.getElementById(targetModal);\n        if (this.modal) this.closeModal();\n      }\n    }, {\n      key: \"scrollBehaviour\",\n      value: function scrollBehaviour(toggle) {\n        if (!this.config.disableScroll) return;\n        var body = document.querySelector('body');\n\n        switch (toggle) {\n          case 'enable':\n            Object.assign(body.style, {\n              overflow: ''\n            });\n            break;\n\n          case 'disable':\n            Object.assign(body.style, {\n              overflow: 'hidden'\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        this.modal.addEventListener('touchstart', this.onClick);\n        this.modal.addEventListener('click', this.onClick);\n        document.addEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"removeEventListeners\",\n      value: function removeEventListeners() {\n        this.modal.removeEventListener('touchstart', this.onClick);\n        this.modal.removeEventListener('click', this.onClick);\n        document.removeEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (event.target.hasAttribute(this.config.closeTrigger)) {\n          this.closeModal(event);\n        }\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (event.keyCode === 27) this.closeModal(event); // esc\n\n        if (event.keyCode === 9) this.retainFocus(event); // tab\n      }\n    }, {\n      key: \"getFocusableNodes\",\n      value: function getFocusableNodes() {\n        var nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n        return Array.apply(void 0, _toConsumableArray(nodes));\n      }\n      /**\n       * Tries to set focus on a node which is not a close trigger\n       * if no other nodes exist then focuses on first close trigger\n       */\n\n    }, {\n      key: \"setFocusToFirstNode\",\n      value: function setFocusToFirstNode() {\n        var _this3 = this;\n\n        if (this.config.disableFocus) return;\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return; // remove nodes on whose click, the modal closes\n        // could not think of a better name :(\n\n        var nodesWhichAreNotCloseTargets = focusableNodes.filter(function (node) {\n          return !node.hasAttribute(_this3.config.closeTrigger);\n        });\n        if (nodesWhichAreNotCloseTargets.length > 0) nodesWhichAreNotCloseTargets[0].focus();\n        if (nodesWhichAreNotCloseTargets.length === 0) focusableNodes[0].focus();\n      }\n    }, {\n      key: \"retainFocus\",\n      value: function retainFocus(event) {\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return;\n        /**\n         * Filters nodes which are hidden to prevent\n         * focus leak outside modal\n         */\n\n        focusableNodes = focusableNodes.filter(function (node) {\n          return node.offsetParent !== null;\n        }); // if disableFocus is true\n\n        if (!this.modal.contains(document.activeElement)) {\n          focusableNodes[0].focus();\n        } else {\n          var focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n          if (event.shiftKey && focusedItemIndex === 0) {\n            focusableNodes[focusableNodes.length - 1].focus();\n            event.preventDefault();\n          }\n\n          if (!event.shiftKey && focusableNodes.length > 0 && focusedItemIndex === focusableNodes.length - 1) {\n            focusableNodes[0].focus();\n            event.preventDefault();\n          }\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  var activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  var generateTriggerMap = function generateTriggerMap(triggers, triggerAttr) {\n    var triggerMap = [];\n    triggers.forEach(function (trigger) {\n      var targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  var validateModalPresence = function validateModalPresence(id) {\n    if (!document.getElementById(id)) {\n      console.warn(\"MicroModal: \\u2757Seems like you have missed %c'\".concat(id, \"'\"), 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<div class=\\\"modal\\\" id=\\\"\".concat(id, \"\\\"></div>\"));\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  var validateTriggerPresence = function validateTriggerPresence(triggers) {\n    if (triggers.length <= 0) {\n      console.warn(\"MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<a href=\\\"#\\\" data-micromodal-trigger=\\\"my-modal\\\"></a>\");\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  var validateArgs = function validateArgs(triggers, triggerMap) {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) {\n      validateModalPresence(id);\n    }\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  var init = function init(config) {\n    // Create an config object with default openTrigger\n    var options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    var triggers = _toConsumableArray(document.querySelectorAll(\"[\".concat(options.openTrigger, \"]\"))); // Makes a mappings of modals with their trigger nodes\n\n\n    var triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      var value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = _toConsumableArray(value);\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  var show = function show(targetModal, config) {\n    var options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // clear events in case previous modal wasn't close\n\n    if (activeModal) activeModal.removeEventListeners(); // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  var close = function close(targetModal) {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init: init,\n    show: show,\n    close: close\n  };\n}();\nwindow.MicroModal = MicroModal;\n\nexport default MicroModal;\n","import MicroModal from 'micromodal';\nimport { createElementFromHtml } from '../lib/utils.js';\n\nconst modals = document.querySelectorAll('[data-site-modal]');\nconst wrappers = [];\nmodals.forEach(setupModal);\n\n// Create a grouping container to grab all modals from content of the page and \n// move to the bottom of the page\nconst container = document.createElement('div');\ncontainer.classList.add('modals');\ndocument.body.appendChild(container);\nwrappers.forEach(m => container.appendChild(m));\n// Intialize modal handler script\nMicroModal.init({ \n  openClass: 'modal--open',\n  disableScroll: true\n});\n\n\nfunction setupModal(modal, index) {\n  // Collect Attributes\n  const id = modal.id;\n  const data = JSON.parse(modal.dataset.siteModal);\n  const classes = modal.getAttribute('class') || '';\n\n  // Remove attributes\n  modal.removeAttribute('data-site-modal');\n  modal.removeAttribute('id');\n  modal.removeAttribute('class');\n\n  const template = (id, classes, data) => `\n    <div class=\"modal modal--slide ${ classes }\" id=\"${ id }\" aria-hidden=\"true\">\n      <div class=\"modal__overlay\" tabindex=\"-1\" data-micromodal-close>\n        <div class=\"modal__container\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"${ id }-title\">\n          <div class=\"modal__label\">\n            <strong>${ data.label }</strong>\n            <button class=\"modal__close\" aria-label=\"Close modal\" data-micromodal-close></button>\n          </div>\n          <div class=\"modal__header\">\n            <h2 class=\"modal__title h2\" id=\"${ id }-title\">${ data.title }</h2>\n          </div>\n          <div class=\"modal__body\"></div>\n        </div>\n      </div>\n    </div>`;\n\n  // Create wrapped modal (with repeatable structure), \n  // and insert the original modal content into it\n  const markup = template(id, classes, data).trim();\n  const wrapper = createElementFromHtml(markup);\n  wrapper.querySelector('.modal__body').appendChild(modal);\n  wrappers.push(wrapper);\n}","/**\n * Debounces function using requestAnimationFrame()\n * @param  {Function} callback Function to invoke, cancelled if called faster than RAF\n * @param  {Object} context Optional context to bind to callback\n */\nexport function debounceAnimationFrame(callback, context = null) {\n  let tid;\n  return function debounced() {\n    const args = arguments;\n    if (tid) window.cancelAnimationFrame(tid);\n    tid = window.requestAnimationFrame(() => {\n      tid = false;\n      callback.apply(context, args);\n    });\n  };\n}\n/**\n * Returns a function, that, as long as it continues to be invoked, will not be triggered\n * - Credit David Walsh (https://davidwalsh.name/javascript-debounce-function)\n * @param {Function} callback Function to invoke \n * @param {Number} wait  Amount of time after (milliseconds)\n * @param {Boolean} immediate  trigger the function on the leading edge, instead of the trailing.\n * @param {Object} valueThis  Context for function\n */\nexport function debounce(callback, wait, immediate, valueThis) {\n  var timeout;\n  return function executedFunction() {\n    var context = valueThis || this;\n    var args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) callback.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) callback.apply(context, args);\n  };\n}\n/**\n * Searches array for first item matching test, beginning at a start index but searching the entire array\n * @param {Array} array Array to search\n * @param {Number} startIndex The index in the array to start the search from\n * @param {Function} callback A test function that is passed array item and index\n * - Credit: (James Waddington) https://stackoverflow.com/questions/28430348/how-to-loop-through-arrays-starting-at-different-index-while-still-looping-throu\n */\nexport function offsetFindIndexOf(array, startIndex = 0, callback) {\n  let found, offset;\n  for (var i = 0; i < array.length; i++) {\n    offset = (i + startIndex) % array.length;\n    found = callback(array[offset], offset);\n    if (found) return offset;\n  }\n  return -1;\n}\n\nexport function prettyDate(dateStr) {\n  const date = new Date(dateStr);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  return `${ months[date.getMonth()] } ${ date.getDate() }, ${ date.getFullYear() }`;\n}\n// Does not include name\nexport function formatDateIso(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n// export function mapMostReferenced(array) {\n//   return array.map(item => {\n//     const itemData = item[0]; // This is the object of static data\n//     itemData.count = item[1].count;\n//     itemData.summariesOverTime = item[1].summaries_over_time;\n//     return itemData;\n//   });\n// }\n\nexport function removeArrayElement(array, elem) {\n  var index = array.indexOf(elem);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n}\n\n/**\n *   Will return an object with the separation details\n *   @param  {[type]} string [description]\n *   @return {object}        keys: value, original, unit\n */\nexport function separateCssUnit(original) {\n  const pattern = /(px|vw|vh|%|em|rem)/i;\n  return {\n    original,\n    value:  original.replace(pattern, \"\"),\n    unit:   original.match(pattern)[0]\n  };\n}\n\n/**\n *   Truncates string with ellipsis if over the max, note use framework function\n *   if you need to know the effects of the truncate process (returns an object \n *   with info instead) this function only modifies the string\n *   @param  {string} string    String to possibly truncate\n *   @param  {number} max       How many characters max?\n *   @return {string}     \n */\nexport function truncate(string, max, overflowChar = '…') {\n  return string.length <= max ? string : string.slice(0, max) + overflowChar;\n}\n\n/**\n *   Prints something if modulus is true\n *   @param  {number}         index           Index to check\n *   @param  {number}         modulo          Modulus to check\n *   @param  {string|number}  string          String to print/return if modulus\n *   @return {string|number}                  Returns the string or empty string depending on modulus truthfulness\n */\nexport function printModulus(index, modulo, string) {\n  return index % modulo ? string : \"\";\n}\n/**\n *   Returns reliable document height\n *   @return {number}\n */\nexport function documentHeight() {\n  return Math.max(\n    document.body.scrollHeight, document.documentElement.scrollHeight,\n    document.body.offsetHeight, document.documentElement.offsetHeight,\n    document.body.clientHeight, document.documentElement.clientHeight\n  );\n}\n/**\n *   Returns reliable window height\n *   @return {number}\n */\nexport function windowHeight() {\n  return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n}\n/**\n *   Returns reliable window width\n *   @return {number}\n */\nexport function windowWidth() {\n  return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n}\n/**\n *   Returns object with both\n *   @return {Object}\n */\nexport function windowSize() {\n  return { height: windowHeight(), width: windowWidth()  };\n}\n/**\n *   Returns an array of direct descendants\n *   @param  {Node}   element\n *   @param  {String} selector\n *   @return {Array}\n */\nexport function getDirectDescandants(element, selector) {\n  return [...element.children].filter(child => child.matches(selector));\n};\n/**\n *   Checks if element is overflown both vertically and horizontally\n *   @param  {Node}  element\n *   @return {Boolean}\n */\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n/**\n *   Checks if element is overflown vertically\n *   @param  {Node}  element\n *   @return {Boolean}\n */\nexport function isOverflownY(element) {\n  return element.scrollHeight > element.clientHeight;\n}\n/**\n *   Check browser support for position: sticky\n *   - https://stackoverflow.com/questions/60214332/dynamically-detect-if-positionsticky-is-supported-by-the-browser\n *   @return {Boolean}\n */\nexport function browserWithPositionSticky() {\n  var prop = 'position:';\n  var value = 'sticky';\n  var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n  var el = document.createElement('a');\n  var mStyle = el.style;\n  mStyle.cssText = prop + prefixes.join(value + ';' + prop).slice(0, - prop.length);\n  \n  return mStyle.position.indexOf(value) !== -1;\n};\n\nexport function urlize(string) {\n  var newString;\n  string = string.replace(/^[^-_a-zA-Z]+/, '').replace(/^-(?:[-0-9]+)/, '-');\n  newString = string && string.replace(/[^-_a-zA-Z0-9]+/g, '-');\n  return newString;\n}\n/**\n *   Checks object has required properties\n *   @param  {array.string}  required     Array of properties to check for\n *   @return {function}                   Function for user to use to test for props passed\n */\nexport function hasRequiredProps(required) {\n  /**\n   *   Function used for testing on user end\n   *   @param  {object}   testObject   Object to test on\n   *   @return {Boolean}\n   */\n  return function(object) {\n    return required.every(value => object[value] !== undefined);\n  }\n}\n/**\n * Creates a new element with attributes and children\n * @param {Object} config Configuration object\n * @param {String} config.tag Node type (ie 'div')\n * @param {Object} config.attributes Attributes to add to the new element\n * @param {Array} config.children Array of children to append into the new element\n */\nexport function composeElement(config) { // tag, attributes = {}, children\n  const { tag, attributes, children } = config;\n  const element = document.createElement(tag);\n  if (attributes) {\n    Object.entries(attributes).forEach((a, v) => element.setAttribute(a, v));\n  }\n  if (children) {\n    children.forEach(child => element.appendChild(c));\n  }\n  return element;\n}\n/**\n * Returns Node List from HTML markup string\n * @param {String} markup HTML markup to create into an element\n */\nexport function createElementFromHtml(markup) {\n  const doc = new DOMParser().parseFromString(markup, 'text/html');\n  return doc.body.firstChild;\n}"],"sourceRoot":""}